%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1728.000000 1466.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.1 (Build 13B42) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1728 1466
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1728 1466
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 1728 1466 rc
-0.5 1466.5 m
1727.5 1466.5 l
1727.5 0.5 l
-0.5 0.5 l
h
-0.5 1466.5 m
f
0.80000001 0.80000001 0.80000001 sc
1145.6917 227.53859 m
1239.0364 167.99767 1390.3781 167.99767 1483.7228 227.53859 c
1577.068 287.07922 1577.068 383.61356 1483.7228 443.15421 c
1390.3781 502.69513 1239.0364 502.69513 1145.6917 443.15421 c
1052.3464 383.61356 1052.3464 287.07922 1145.6917 227.53859 c
f
6 w
1 J
1 j
0 0 0 sc
1 0 0 -1 0 1466 cm
1145.6917 1238.4614 m
1239.0364 1298.0023 1390.3781 1298.0023 1483.7228 1238.4614 c
1577.068 1178.9208 1577.068 1082.3865 1483.7228 1022.8458 c
1390.3781 963.30487 1239.0364 963.30487 1145.6917 1022.8458 c
1052.3464 1082.3865 1052.3464 1178.9208 1145.6917 1238.4614 c
S
0.80000001 0.80000001 0.80000001 sc
CM
255.88438 140.54755 m
304.42126 90.314903 383.11505 90.314903 431.65195 140.54755 c
480.18909 190.77994 480.18909 272.22266 431.65195 322.45505 c
383.11505 372.68771 304.42126 372.68771 255.88438 322.45505 c
207.34724 272.22266 207.34724 190.77994 255.88438 140.54755 c
f
0 0 0 sc
1 0 0 -1 0 1466 cm
255.88438 1325.4524 m
304.42126 1375.6851 383.11505 1375.6851 431.65195 1325.4524 c
480.18909 1275.2201 480.18909 1193.7773 431.65195 1143.5449 c
383.11505 1093.3123 304.42126 1093.3123 255.88438 1143.5449 c
207.34724 1193.7773 207.34724 1275.2201 255.88438 1325.4524 c
S
0.80000001 0.80000001 0.80000001 sc
CM
886.33228 998.12622 m
959.75073 921.08173 1078.7856 921.08173 1152.2041 998.12622 c
1225.623 1075.1703 1225.623 1200.0834 1152.2041 1277.1276 c
1078.7856 1354.1721 959.75073 1354.1721 886.33228 1277.1276 c
812.91333 1200.0834 812.91333 1075.1703 886.33228 998.12622 c
f
0 0 0 sc
1 0 0 -1 0 1466 cm
886.33228 467.87378 m
959.75073 544.91827 1078.7856 544.91827 1152.2041 467.87378 c
1225.623 390.82965 1225.623 265.91656 1152.2041 188.87245 c
1078.7856 111.82794 959.75073 111.82794 886.33228 188.87245 c
812.91333 265.91656 812.91333 390.82965 886.33228 467.87378 c
S
1 1 0 sc
CM
638.44141 408.81488 m
733.33875 309.23074 887.19757 309.23074 982.09491 408.81488 c
1076.9928 508.3985 1076.9928 669.85529 982.09491 769.4389 c
887.19757 869.02307 733.33875 869.02307 638.44141 769.4389 c
543.54358 669.85529 543.54358 508.3985 638.44141 408.81488 c
f
0 0 0 sc
1 0 0 -1 0 1466 cm
638.44141 1057.1852 m
733.33875 1156.7693 887.19757 1156.7693 982.09491 1057.1852 c
1076.9928 957.6015 1076.9928 796.14471 982.09491 696.5611 c
887.19757 596.97693 733.33875 596.97693 638.44141 696.5611 c
543.54358 796.14471 543.54358 957.6015 638.44141 1057.1852 c
S
0.80000001 0.80000001 0.80000001 sc
CM
313.44141 876.81488 m
408.33875 777.23071 562.19757 777.23071 657.09491 876.81488 c
751.99274 976.3985 751.99274 1137.8553 657.09491 1237.439 c
562.19757 1337.0231 408.33875 1337.0231 313.44141 1237.439 c
218.54359 1137.8553 218.54359 976.3985 313.44141 876.81488 c
f
0 0 0 sc
1 0 0 -1 0 1466 cm
313.44141 589.18512 m
408.33875 688.76929 562.19757 688.76929 657.09491 589.18512 c
751.99274 489.6015 751.99274 328.14468 657.09491 228.56107 c
562.19757 128.97694 408.33875 128.97694 313.44141 228.56107 c
218.54359 328.14468 218.54359 489.6015 313.44141 589.18512 c
S
317.9588 323.80746 m
332.21292 338.06168 355.32343 338.06168 369.57755 323.80746 c
383.83173 309.55334 383.83173 286.44287 369.57755 272.18872 c
355.32343 257.93454 332.21292 257.93454 317.9588 272.18872 c
303.70459 286.44287 303.70459 309.55334 317.9588 323.80746 c
S
556.9588 419.55746 m
571.21295 433.81168 594.32343 433.81168 608.57751 419.55746 c
622.83173 405.30334 622.83173 382.19287 608.57751 367.93872 c
594.32343 353.68454 571.21295 353.68454 556.9588 367.93872 c
542.70459 382.19287 542.70459 405.30334 556.9588 419.55746 c
S
363.9588 545.0575 m
378.21292 559.31165 401.32343 559.31165 415.57755 545.0575 c
429.83173 530.80334 429.83173 507.69287 415.57755 493.43872 c
401.32343 479.18454 378.21292 479.18454 363.9588 493.43872 c
349.70459 507.69287 349.70459 530.80334 363.9588 545.0575 c
S
566.9588 592.5575 m
581.21295 606.81165 604.32343 606.81165 618.57751 592.5575 c
632.83173 578.30334 632.83173 555.19287 618.57751 540.93872 c
604.32343 526.68451 581.21295 526.68451 566.9588 540.93872 c
552.70459 555.19287 552.70459 578.30334 566.9588 592.5575 c
S
7 w
0.29803899 0.29803899 0.29803899 sc
351.80951 336.67514 m
376.04761 453.25519 l
S
CM
379.63022 995.51331 m
382.50943 1014.0883 l
369.58578 1011.4013 l
h
379.63022 995.51331 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
379.63022 470.48669 m
382.50943 451.91171 l
369.58578 454.59866 l
h
379.63022 470.48669 m
S
1 J
1 j
546.09259 379.05484 m
406.34265 323.06717 l
S
CM
390.005 1149.4781 m
403.88815 1136.8063 l
408.79715 1149.0594 l
h
390.005 1149.4781 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
390.005 316.52185 m
403.88815 329.19379 l
408.79715 316.94055 l
h
390.005 316.52185 m
S
1 J
1 j
370.61423 326.97351 m
546.96014 517.3067 l
S
CM
558.92181 935.78284 m
551.80157 953.17889 l
542.11877 944.20764 l
h
558.92181 935.78284 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
558.92181 530.21716 m
551.80157 512.82111 l
542.11877 521.79236 l
h
558.92181 530.21716 m
S
1 J
1 j
294.26816 131.08917 m
324.60245 233.37323 l
S
CM
329.60663 1215.7532 m
330.93005 1234.5033 l
318.27484 1230.7502 l
h
329.60663 1215.7532 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
329.60663 250.24683 m
330.93005 231.49666 l
318.27484 235.2498 l
h
329.60663 250.24683 m
S
1 J
1 j
901.17413 324.18042 m
648.6192 379.36047 l
S
CM
631.4248 1082.8828 m
650.02802 1080.1917 l
647.21045 1093.0874 l
h
631.4248 1082.8828 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
631.4248 383.11725 m
650.02802 385.80838 l
647.21045 372.9126 l
h
631.4248 383.11725 m
S
1 J
1 j
0.12743799 0 0.98833299 sc
606.54974 603.77539 m
650.25452 721.19824 l
S
CM
656.39374 728.30725 m
656.43994 747.104 l
644.06903 742.49951 l
h
656.39374 728.30725 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
656.39374 737.69275 m
656.43994 718.896 l
644.06903 723.50049 l
h
656.39374 737.69275 m
S
1 J
1 j
0.29803899 0.29803899 0.29803899 sc
428.23416 528.24878 m
527.13599 551.39081 l
S
CM
544.27307 910.59924 m
528.63971 921.03558 l
525.63226 908.1828 l
h
544.27307 910.59924 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
544.27307 555.40076 m
528.63971 544.96442 l
525.63226 557.8172 l
h
544.27307 555.40076 m
S
6 w
1 J
1 j
0 0 0 sc
647.9588 810.1825 m
662.21295 824.43665 685.32343 824.43665 699.57751 810.1825 c
713.83173 795.92834 713.83173 772.81787 699.57751 758.56372 c
685.32343 744.30951 662.21295 744.30951 647.9588 758.56372 c
633.70459 772.81787 633.70459 795.92834 647.9588 810.1825 c
S
665.9588 967.1825 m
680.21295 981.43665 703.32343 981.43665 717.57751 967.1825 c
731.83173 952.92834 731.83173 929.81787 717.57751 915.56372 c
703.32343 901.30951 680.21295 901.30951 665.9588 915.56372 c
651.70459 929.81787 651.70459 952.92834 665.9588 967.1825 c
S
827.9588 844.1825 m
842.21295 858.43665 865.32343 858.43665 879.57751 844.1825 c
893.83173 829.92834 893.83173 806.81787 879.57751 792.56372 c
865.32343 778.30951 842.21295 778.30951 827.9588 792.56372 c
813.70459 806.81787 813.70459 829.92834 827.9588 844.1825 c
S
827.9588 1040.1825 m
842.21295 1054.4366 865.32343 1054.4366 879.57751 1040.1825 c
893.83173 1025.9283 893.83173 1002.8179 879.57751 988.56372 c
865.32343 974.30951 842.21295 974.30951 827.9588 988.56372 c
813.70459 1002.8179 813.70459 1025.9283 827.9588 1040.1825 c
S
937.9588 946.1825 m
952.21295 960.43665 975.32343 960.43665 989.57751 946.1825 c
1003.8317 931.92834 1003.8317 908.81787 989.57751 894.56372 c
975.32343 880.30951 952.21295 880.30951 937.9588 894.56372 c
923.70459 908.81787 923.70459 931.92834 937.9588 946.1825 c
S
913.9588 341.55746 m
928.21295 355.81168 951.32343 355.81168 965.57751 341.55746 c
979.83173 327.30334 979.83173 304.19287 965.57751 289.93872 c
951.32343 275.68454 928.21295 275.68454 913.9588 289.93872 c
899.70459 304.19287 899.70459 327.30334 913.9588 341.55746 c
S
1021.9588 427.55746 m
1036.2129 441.81168 1059.3234 441.81168 1073.5775 427.55746 c
1087.8318 413.30334 1087.8318 390.19287 1073.5775 375.93872 c
1059.3234 361.68454 1036.2129 361.68454 1021.9588 375.93872 c
1007.7046 390.19287 1007.7046 413.30334 1021.9588 427.55746 c
S
1045.9589 280.80746 m
1060.2129 295.06168 1083.3234 295.06168 1097.5775 280.80746 c
1111.8318 266.55334 1111.8318 243.44286 1097.5775 229.18874 c
1083.3234 214.93454 1060.2129 214.93454 1045.9589 229.18874 c
1031.7046 243.44286 1031.7046 266.55334 1045.9589 280.80746 c
S
7 w
0.29803899 0.29803899 0.29803899 sc
1065.3925 293.98294 m
1058.647 335.22906 l
S
CM
1055.8063 1113.4017 m
1065.1604 1129.7057 l
1052.1334 1131.8362 l
h
1055.8063 1113.4017 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
1055.8063 352.5983 m
1065.1604 336.29431 l
1052.1334 334.16382 l
h
1055.8063 352.5983 m
S
1 J
1 j
1035.877 271.51624 m
1001.0042 287.56564 l
S
CM
985.01611 1171.0762 m
1003.7634 1172.4388 l
998.24487 1184.4299 l
h
985.01611 1171.0762 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
985.01611 294.92377 m
1003.7634 293.56116 l
998.24487 281.57013 l
h
985.01611 294.92377 m
S
1 J
1 j
970.67078 340.35574 m
995.03992 359.7608 l
S
CM
1008.808 1095.2756 m
999.15125 1111.4022 l
990.92865 1101.0762 l
h
1008.808 1095.2756 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
1008.808 370.7243 m
999.15125 354.59775 l
990.92865 364.92386 l
h
1008.808 370.7243 m
S
1 J
1 j
0.93737298 0 0.092539698 sc
712.58527 791.7052 m
787.53583 805.86255 l
S
CM
804.83002 656.87079 m
788.76086 666.62274 l
786.31085 653.6521 l
h
804.83002 656.87079 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
804.83002 809.12921 m
788.76086 799.37726 l
786.31085 812.3479 l
h
804.83002 809.12921 m
S
1 J
1 j
853.76819 857.87311 m
853.76819 946.97308 l
S
CM
853.76819 501.42691 m
860.36816 519.02692 l
847.16815 519.02692 l
h
853.76819 501.42691 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
853.76819 964.57306 m
860.36816 946.97308 l
847.16815 946.97308 l
h
853.76819 964.57306 m
S
1 J
1 j
882.7326 845.23102 m
914.34558 874.54486 l
S
CM
927.2511 579.48822 m
918.83319 596.29468 l
909.85797 586.61554 l
h
927.2511 579.48822 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
927.2511 886.51178 m
918.83319 869.70532 l
909.85797 879.38446 l
h
927.2511 886.51178 m
S
1 J
1 j
723.23126 917.4845 m
800.08423 859.13312 l
S
CM
814.10168 617.50977 m
796.0932 612.12341 l
804.07532 601.61035 l
h
814.10168 617.50977 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
814.10168 848.49023 m
796.0932 853.87659 l
804.07532 864.38965 l
h
814.10168 848.49023 m
S
1 J
1 j
817.74658 998.14117 m
753.2265 969.06726 l
S
CM
737.18036 504.16339 m
750.51495 490.91544 l
755.93799 502.95001 l
h
737.18036 504.16339 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
737.18036 961.83661 m
750.51495 975.08459 l
755.93799 963.04999 l
h
737.18036 961.83661 m
S
1 J
1 j
0.18154401 0 0.98342198 sc
1030.7726 437.41583 m
955.26819 595.87311 l
881.74561 757.04321 l
S
CM
874.44104 692.94421 m
887.75037 706.21759 l
875.74091 711.69604 l
h
874.44104 692.94421 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
874.44104 773.05579 m
887.75037 759.78241 l
875.74091 754.30396 l
h
874.44104 773.05579 m
S
1 J
1 j
0.29803899 0.29803899 0.29803899 sc
1270.2682 102.8731 m
1125.2681 213.99722 l
S
CM
1111.2986 1241.297 m
1129.2827 1246.7643 l
1121.2534 1257.2413 l
h
1111.2986 1241.297 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
1111.2986 224.70302 m
1129.2827 219.23576 l
1121.2534 208.75867 l
h
1111.2986 224.70302 m
S
1 J
1 j
0.251995 1 0.0408797 sc
995.12274 944.40369 m
1145.4156 1059.5903 l
S
CM
1159.3849 395.70349 m
1149.4305 411.6481 l
1141.4009 401.17123 l
h
1159.3849 395.70349 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
1159.3849 1070.2965 m
1149.4305 1054.3519 l
1141.4009 1064.8287 l
h
1159.3849 1070.2965 m
S
1 J
1 j
0.12743799 0 0.98833299 sc
373.98062 1209.0503 m
640.21692 984.79547 l
S
CM
653.67798 492.54294 m
635.96497 486.25238 l
644.46881 476.15662 l
h
653.67798 492.54294 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
653.67798 973.45703 m
635.96497 979.74762 l
644.46881 989.84338 l
h
653.67798 973.45703 m
S
1 J
1 j
0.251995 1 0.0408797 sc
832.51367 785.06982 m
619.03241 450.56982 l
S
CM
609.5639 1030.2662 m
613.46887 1011.8795 l
624.59589 1018.9808 l
h
609.5639 1030.2662 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
609.5639 435.73383 m
613.46887 454.12051 l
624.59589 447.01917 l
h
609.5639 435.73383 m
S
1 J
1 j
693.27142 750.01324 m
906.49237 374.37167 l
S
CM
915.18042 1106.9344 m
900.75256 1094.8864 l
912.23218 1088.3704 l
h
915.18042 1106.9344 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
915.18042 359.06552 m
900.75256 371.11365 l
912.23218 377.62967 l
h
915.18042 359.06552 m
S
0.80000001 0.80000001 0.80000001 sc
CM
202.38617 447.35184 m
239.87646 369.05139 300.66022 369.05139 338.15051 447.35184 c
375.64102 525.65192 375.64102 652.60126 338.15051 730.90137 c
300.66022 809.20178 239.87646 809.20178 202.38617 730.90137 c
164.89568 652.60126 164.89568 525.65192 202.38617 447.35184 c
f
6 w
1 J
1 j
0 0 0 sc
1 0 0 -1 0 1466 cm
202.38617 1018.6481 m
239.87646 1096.9486 300.66022 1096.9486 338.15051 1018.6481 c
375.64102 940.34808 375.64102 813.39874 338.15051 735.09863 c
300.66022 656.79822 239.87646 656.79822 202.38617 735.09863 c
164.89568 813.39874 164.89568 940.34808 202.38617 1018.6481 c
S
244.4588 797.6825 m
258.71292 811.93665 281.82343 811.93665 296.07755 797.6825 c
310.33173 783.42834 310.33173 760.31787 296.07755 746.06372 c
281.82343 731.80951 258.71292 731.80951 244.4588 746.06372 c
230.20461 760.31787 230.20461 783.42834 244.4588 797.6825 c
S
244.4588 985.6825 m
258.71292 999.93665 281.82343 999.93665 296.07755 985.6825 c
310.33173 971.42834 310.33173 948.31787 296.07755 934.06372 c
281.82343 919.80951 258.71292 919.80951 244.4588 934.06372 c
230.20461 948.31787 230.20461 971.42834 244.4588 985.6825 c
S
7 w
0.29803899 0.29803899 0.29803899 sc
270.26819 839.27313 m
270.26819 892.47308 l
S
CM
270.26819 555.92694 m
276.86819 573.52692 l
263.66818 573.52692 l
h
270.26819 555.92694 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
270.26819 910.07306 m
276.86819 892.47308 l
263.66818 892.47308 l
h
270.26819 910.07306 m
S
CM
270.26819 644.3269 m
263.66818 626.72687 l
276.86819 626.72687 l
h
270.26819 644.3269 m
f
1 0 0 -1 0 1466 cm
270.26819 821.6731 m
263.66818 839.27313 l
276.86819 839.27313 l
h
270.26819 821.6731 m
S
1 J
1 j
287.16284 736.15747 m
360.9433 580.18433 l
S
CM
368.46918 901.72546 m
354.97714 888.63782 l
366.90948 882.99347 l
h
368.46918 901.72546 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
368.46918 564.27454 m
354.97714 577.36218 l
366.90948 583.00653 l
h
368.46918 564.27454 m
S
1 J
1 j
0.12743799 0 0.98833299 sc
309.74936 773.09619 m
606.40039 782.28613 l
S
CM
623.99194 683.16888 m
606.60474 690.31073 l
606.19598 677.11707 l
h
623.99194 683.16888 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
623.99194 782.83112 m
606.60474 775.68927 l
606.19598 788.88293 l
h
623.99194 782.83112 m
S
6 w
1 J
1 j
0 0 0 sc
1173.1051 1126.402 m
1187.3593 1140.6562 1210.4697 1140.6562 1224.7239 1126.402 c
1238.9781 1112.1478 1238.9781 1089.0374 1224.7239 1074.7832 c
1210.4697 1060.5291 1187.3593 1060.5291 1173.1051 1074.7832 c
1158.851 1089.0374 1158.851 1112.1478 1173.1051 1126.402 c
S
7 w
0.29803899 0.29803899 0.29803899 sc
1264.9758 1113.979 m
1359.0483 1133.0415 l
S
CM
1376.2977 329.46307 m
1360.3591 339.42697 l
1357.7375 326.4899 l
h
1376.2977 329.46307 m
f
0 J
0 j
1 0 0 -1 0 1466 cm
1376.2977 1136.5369 m
1360.3591 1126.573 l
1357.7375 1139.5101 l
h
1376.2977 1136.5369 m
S
CM
1247.7264 355.5163 m
1263.665 345.55243 l
1266.2866 358.48947 l
h
1247.7264 355.5163 m
f
1 0 0 -1 0 1466 cm
1247.7264 1110.4836 m
1263.665 1120.4476 l
1266.2866 1107.5105 l
h
1247.7264 1110.4836 m
S
6 w
1 J
1 j
0 0 0 sc
1399.3003 1172.2373 m
1413.5544 1186.4916 1436.6649 1186.4916 1450.9189 1172.2373 c
1465.1732 1157.9833 1465.1732 1134.8727 1450.9189 1120.6187 c
1436.6649 1106.3644 1413.5544 1106.3644 1399.3003 1120.6187 c
1385.046 1134.8727 1385.046 1157.9833 1399.3003 1172.2373 c
S
317.9588 1260.308 m
332.21292 1274.5623 355.32339 1274.5623 369.57751 1260.308 c
383.83173 1246.054 383.83173 1222.9435 369.57751 1208.6893 c
355.32339 1194.4351 332.21292 1194.4351 317.9588 1208.6893 c
303.70459 1222.9435 303.70459 1246.054 317.9588 1260.308 c
S
ep
end
%%Trailer
%%EOF
