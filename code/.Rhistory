out.fname = 'thetas-p1-Npar50-N5000.csv'
# write.table(cbind(thetas, thetas.ls), file=out.fname, quote=FALSE, sep=',', col.names=c('pv.ml', 'iota.ml', 'pv.ls', 'iota.ls'))
thetas = read.csv(file = paste0('/Users/daviddarmon/Documents/R/', out.fname))
library(np)
bws.pv = npudensbw(~thetas[,1], bwmethod='cv.ml')
# plot(bws.pv)
bws.iota = npudensbw(~thetas[,2], bwmethod='cv.ml')
# plot(bws.iota)
bws.pv.ls = npudensbw(~thetas[,3], bwmethod='cv.ml')
# plot(bws.pv.ls)
bws.iota.ls = npudensbw(~thetas[,4], bwmethod='cv.ml')
# plot(bws.iota.ls)
x.eval.pv = seq(min(c(thetas[,1], thetas[,3])), max(c(thetas[,1], thetas[,3])), by = 0.01)
fhat.pv = fitted(npudens(bws.pv, edat = x.eval.pv))
fhat.pv.ls = fitted(npudens(bws.pv.ls, edat = x.eval.pv))
plot(x.eval.pv, fhat.pv, type = 'l', xlab = 'Estimator for pv', ylab = 'Estimated Sampling Density', col = 'blue')
lines(x.eval.pv, fhat.pv.ls, type = 'l', col = 'red')
x.eval.iota = seq(min(c(thetas[,2], thetas[,4])), max(c(thetas[,2], thetas[,4])), by = 0.0001)
fhat.iota = fitted(npudens(bws.iota, edat = x.eval.iota))
fhat.iota.ls = fitted(npudens(bws.iota.ls, edat = x.eval.iota))
plot(x.eval.iota, fhat.iota, type = 'l', xlab = 'Estimator for iota', ylab = 'Estimated Sampling Density', col = 'blue')
lines(x.eval.iota, fhat.iota.ls, type = 'l', col = 'red')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
X = rnorm(1000)
Y = rnorm(1000)
Z = Y - X
plot(X, Z)
source('~/.active-rstudio-document')
plot(X, Z, pch = 16, cex = 0.1)
plot(X, Z, pch = 16, cex = 0.25)
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
cor(Z, W)
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
plot(Z, W, pch = 16, cex = 0.25)
Z = abs(X - rnorm(N))
W = abs(X - rnorm(N))
plot(Z, W, pch = 16, cex = 0.25)
data = rbind(Z, W)
data = cbind(Z, W)
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
source('/Users/daviddarmon/Documents/R/diff-indep.R')
persp(est$x1, est$x2, fhat)
persp(est$x1, est$x2, f.indep)
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
omega = rnorm(1)
source('~/Documents/R/blog/spectra/simulation.R')
plot(t, X)
plot(t, X, type = 'l')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
spectrum(x)
spectrum(X)
X.sp = spectrum(X, plot = FALSE)
source('~/Documents/R/blog/spectra/simulation.R')
plot(X.sp$freq, X.sp$spec)
plot(X.sp$freq, X.sp$spec, log = 'y')
plot(X.sp$freq, X.sp$spec, log = 'y', type - 'l')
plot(X.sp$freq, X.sp$spec, log = 'y', type = 'l')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
length(X.sp$freq)
length(t)
spectrum(t)
log2(2001)
2^10
2001/2
source('~/Documents/R/blog/spectra/simulation.R')
Phi.hat = Phi.hat + spectrum(X, plot = FALSE)$spec
source('~/Documents/R/blog/spectra/simulation.R')
plot(Phi.hat)
plot(Phi.hat, type = 'l')
plot(Phi.hat, type = 'l', log = 'y')
plot(Phi.hat/num.samples, type = 'l', log = 'y')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
plot(X.sp$freq/dt, Phi.hat/num.samples, type = 'l', log = 'y')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
plot(X.sp$freq/dt, Phi.hat/num.samples, type = 'l')
source('~/Documents/R/blog/spectra/simulation.R')
plot(Phi.hat)
plot(Phi.hat, type ='l')
plot(dnorm(seq(0, 50, by = 0.01)))
plot(dnorm(seq(0, 50, by = 0.01)), type = 'l')
plot(dnorm(seq(0, 50, by = 0.01)), type = 'l', log = 'y')
plot(dnorm(seq(0.01, 50, by = 0.01)), type = 'l', log = 'y')
plot(dnorm(seq(0.01, 10, by = 0.01)), type = 'l', log = 'y')
plot(dnorm(seq(0.01, 20, by = 0.01)), type = 'l', log = 'y')
plot(dnorm(seq(0.01, 30, by = 0.01)), type = 'l', log = 'y')
plot(dnorm(seq(0.01, 30, by = 0.01)), type = 'l')
plot(X.sp$freq/dt, Phi.hat/num.samples, type = 'l')
omega = runif(1) - 0.5
source('~/Documents/R/blog/spectra/simulation.R')
plot(X.sp$freq/dt, Phi.hat/num.samples, type = 'l', log = 'y')
plot(t,X)
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
1i
(2)i
2*i
1i
isin(2)
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
X
plot(t, X)
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
plot(X.sp$freq/dt, Phi.hat/num.samples, type = 'l')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
plot(X.sp$freq/dt, Phi.hat/num.samples, type = 'l', log = 'y')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
plot(X.sp$freq/dt, Phi.hat/num.samples, type = 'l')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/blog/spectra/simulation.R')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
source('/Users/daviddarmon/Documents/R/power-net.R')
library('VGAM')
install.packages('VGAM')
library(VGAM)
degrees.simulated = rpareto(d, location=0, shape=2)
hist(degrees.simulated)
degrees.simulated
degrees.simulated = rpareto(d, location=1, shape=2)
plot(degrees.simulated)
hist(degrees.simulated)
hist(degrees.simulated, breaks=10)
hist(degrees.simulated, breaks=100)
hist(degrees.simulated, breaks=1000)
min(degrees)
min(degrees.scaled)
degrees.simulated = rpareto(d, location=min(degrees.scaled), shape=2)
hist(degrees.simulated, breaks=100)
hist(degrees.simulated, breaks=1000)
alpha.hat = d/sum(log(degrees.scaled) - log(min.hat))
min.hat = min(degrees.scaled)
alpha.hat = d/sum(log(degrees.scaled) - log(min.hat))
degrees.simulated = rpareto(d, location=min.hat, shape=alpha.hat)
hist(degrees.simulated, breaks=1000)
plot(ecdf(degrees.simulated))
degrees.sim = rpareto(d, location=min.hat, shape=alpha.hat)
F.sim = ecdf(degrees.sim)
x.eval.sim = seq(min(degrees.sim), max(degrees.sim), length.out=1000)
F.sim.eval = F.sim(x.eval.sim)
plot(x.eval.sim, F.scaled.sim, log = log.type, type = 'p', pch = 16, cex = 0.5)
F.sim.eval = F.sim(x.eval.sim)
plot(x.eval.sim, F.scaled.sim, log = log.type, type = 'p', pch = 16, cex = 0.5)
plot(x.eval.sim, F.sim.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
x.eval.sim = seq(min(degrees.sim), max(degrees.sim), length.out=10000)
plot(x.eval.sim, F.sim.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
F.sim.eval = F.sim(x.eval.sim)
plot(x.eval.sim, F.sim.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
alpha
?rpareto
min.hat.synth = min(degrees.sim)
alpha.hat.synth = d/sum(log(degrees.sim) - log(min.hat.synth))
min.hat.synth
min.hat
alpha.hat.synth
alpha.hat
degrees.sim
plot(x.eval.sim, F.sim.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
plot(x.eval, F.eval, log = log.type, type = 'l', pch = 16, cex = 0.5)
plot(x.eval.scaled, F.scaled.eval, log = log.type, type = 'l', pch = 16, cex = 0.5)
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
plot(x.eval, F.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
plot(x.eval.scaled, F.scaled.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
n = 55
d = 8000
X = matrix(rnorm(n*d), ncol = d, nrow=n)
Sigma = abs(cor(X))
diag(Sigma) = 0
degrees = rowMeans(Sigma)
plot(density(degrees))
beta = 100
Sigma.scaled = Sigma^beta
degrees.scaled = rowMeans(Sigma.scaled)
plot(density(degrees))
plot(density(degrees.scaled))
F = ecdf(degrees)
F.scaled = ecdf(degrees.scaled)
x.eval = seq(min(degrees), max(degrees), length.out=1000)
x.eval.scaled = seq(min(degrees.scaled), max(degrees.scaled), length.out=1000)
F.eval = F(x.eval)
F.scaled.eval = F.scaled(x.eval.scaled)
log.type = 'xy'
plot(x.eval, F.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
plot(x.eval.scaled, F.scaled.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
library(VGAM)
min.hat = min(degrees.scaled)
alpha.hat = d/sum(log(degrees.scaled) - log(min.hat))
degrees.sim = rpareto(d, location=min.hat, shape=alpha.hat)
min.hat.synth = min(degrees.sim)
alpha.hat.synth = d/sum(log(degrees.sim) - log(min.hat.synth))
# F.sim = ecdf(degrees.sim)
# x.eval.sim = seq(min(degrees.sim), max(degrees.sim), length.out=10000)
#
# F.sim.eval = F.sim(x.eval.sim)
#
# plot(x.eval.sim, F.sim.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
beta = 7
Sigma.scaled = Sigma^beta
degrees.scaled = rowMeans(Sigma.scaled)
plot(density(degrees))
plot(density(degrees.scaled))
F = ecdf(degrees)
F.scaled = ecdf(degrees.scaled)
x.eval = seq(min(degrees), max(degrees), length.out=1000)
x.eval.scaled = seq(min(degrees.scaled), max(degrees.scaled), length.out=1000)
F.eval = F(x.eval)
F.scaled.eval = F.scaled(x.eval.scaled)
log.type = 'xy'
plot(x.eval, F.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
plot(x.eval.scaled, F.scaled.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
library(VGAM)
min.hat = min(degrees.scaled)
alpha.hat = d/sum(log(degrees.scaled) - log(min.hat))
degrees.sim = rpareto(d, location=min.hat, shape=alpha.hat)
min.hat.synth = min(degrees.sim)
alpha.hat.synth = d/sum(log(degrees.sim) - log(min.hat.synth))
# F.sim = ecdf(degrees.sim)
# x.eval.sim = seq(min(degrees.sim), max(degrees.sim), length.out=10000)
#
# F.sim.eval = F.sim(x.eval.sim)
#
# plot(x.eval.sim, F.sim.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
degrees.sim
min(degrees.sim)
max(degrees.sim)
F.sim = ecdf(degrees.sim)
x.eval.sim = seq(min(degrees.sim), max(degrees.sim), length.out=10000)
F.sim.eval = F.sim(x.eval.sim)
plot(x.eval.sim, F.sim.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
min.hat
alpha.hat
source('~/Documents/R/journal-club/power-net.R')
plot(ecdf(degrees.sim))
plot(ecdf(degrees.sim), log = 'y')
plot(ecdf(degrees.sim), log = 'xy')
plot(ecdf(degrees.sim))
plot(x.eval.sim, F.sim.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
hist(degrees.sim)
hist(degrees.sim, breaks = 1000)
plot(x.eval.sim, F.sim.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
plot(x.eval.sim, 1-F.sim.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
plot(x.eval, 1-F.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
plot(x.eval.scaled, 1-F.scaled.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
plot(x.eval.sim, 1-F.sim.eval, log = log.type, type = 'p', pch = 16, cex = 0.5)
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/journal-club/power-net.R')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/Research/rumor-models/cond-probs.R')
source('~/Documents/R/Research/rumor-models/cond-probs.R')
plot(0:num.inputs, p.bass, pch = 16, cex = 0.75, ylim = c(0, 1), col = 'red', xlab = 'Number of Active Parents', ylab = 'P(X = 1 | Active Parents)')
source('~/Documents/R/Research/rumor-models/cond-probs.R')
source('~/Documents/R/Research/rumor-models/cond-probs.R', echo=TRUE)
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
install.packages('sm')
library(sm)
library(playwith)
weight = read.csv('/Users/daviddarmon/Documents/Reference/M/Metrics/WeightWithMovingAverage/Weight.dat', sep='\t', header = FALSE, comment.char = "#")
days = seq(as.Date("2010/5/27"), length.out = length(weight[,1]), by = 'days')
weight = weight[, 2]
trend = sm.regression.autocor(days, weight)
trend = sm.regression.autocor(days, weight,h.first=1)
trend = sm.regression.autocor(days, weight,h.first=1, minh = 0.5, maxh = 10)
trend
trend$estimate
trend$model.y
weight
plot(trend$model.y)
trend2 = sm.regression(days, weight, h=1)
trend2 = sm.regression(days, weight, h=10)
trend$aux$h.first
trend$aux$first.sm
plot(trend$aux$first.sm)
plot(trend$aux$first.sm, type = 'l')
plot(trend$aux$raw.residuals)
plot(trend$aux$raw.residuals, type = 'l')
trend2 = sm.regression(days, weight, h=0.5)
trend2 = sm.regression(days, weight, h=0.25)
trend2 = sm.regression(days, weight, h=30)
trend2 = sm.regression(days, weight, h=50)
trend2 = sm.regression(days, weight, h=100)
trend2 = sm.regression(days, weight, h=20)
trend2 = sm.regression(days, weight, h=1)
trend2 = sm.regression(days, weight, h=50)
trend2 = sm.regression(days, weight, h=20)
trend2 = sm.regression(days, weight, h=30)
trend2 = sm.regression(days, weight, h=10)
trend2 = sm.regression(days, weight, h=5)
trend2 = sm.regression(days, weight, h=2)
trend2 = sm.regression(days, weight, h=5)
trend2 = sm.regression(days, weight, h=2)
trend2 = sm.regression(days, weight, h=5)
trend2 = sm.regression(days, weight, h=30)
trend = sm.regression.autocor(days, weight,h.first=5, minh = 5, maxh = 50)
trend$eval.points
trend$estimate
trend$h
trend2 = sm.regression(days, weight, h=5)
plot(trend$eval.points, trend$estimate)
plot(trend$eval.points, trend$estimate, type = 'l')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
source('~/Documents/R/quantified-self/weight.R')
par (mfrow=c(3,3), mar=c(1,1,1,1))
for (i in 1:9) hist (rt (100, 2), xlab="", ylab="", main="")
hist(rcauchy(10000))
par (mfrow=c(1,1), mar=c(1,1,1,1))
hist(rcauchy(10000))
par (mfrow=c(1,1), mar=rep(2, 4))
hist(rcauchy(10000))
par (mfrow=c(1,1), mar=rep(5, 4))
hist(rcauchy(10000))
source('~/.active-rstudio-document')
?write.csv
?write.table
hist(rexp(10000))
hist(rexp(10000), breaks = 100)
hist(rexp(100000), breaks = 100)
setwd("~/Documents/Reference/R/Research/2013/sfi-dynComm/code")
source('~/Documents/Reference/R/Research/2013/sfi-dynComm/code/analyze_weights_by_community_types.R', echo=TRUE)
source('~/Documents/Reference/R/Research/2013/sfi-dynComm/code/analyze_weights_by_community_types.R', echo=TRUE)
source('~/Documents/Reference/R/Research/2013/sfi-dynComm/code/analyze_weights_by_community_types.R')
source('community_sizes.R')
source('community_sizes.R')
source('community_sizes.R')
quit
quit()
